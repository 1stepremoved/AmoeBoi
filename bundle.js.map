{"version":3,"sources":["webpack:///webpack/bootstrap 1f1e2bfee37fc021532f","webpack:///./lib/util.js","webpack:///./lib/amoeba.js","webpack:///./lib/main.js","webpack:///./lib/amoeboi.js","webpack:///./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;;;;;;;;ACtBiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,GAAG,IAAI,GAAG,IAAI,IAAI;AACxD,6IAAsF,GAAG,IAAI,GAAG,IAAI,IAAI;AACxG,uCAAuC,IAAI,IAAI,GAAG,IAAI,GAAG;AACzD,KAAK;AACL,sCAAsC,IAAI,IAAI,GAAG,IAAI,GAAG;AACxD,6IAAsF,IAAI,IAAI,GAAG,IAAI,GAAG;AACxG,uCAAuC,GAAG,IAAI,GAAG,IAAI,IAAI;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjJA;AACA;AACyC;AAEU;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kEAAkE,QAAQ;AAC1E;AACA;AACA;AACA,kEAAkE,QAAQ;AAC1E;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,uDAAuD,gBAAgB;AACvE,uDAAuD,iBAAiB;AACxE,uDAAuD,iBAAiB;AACxE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA,6JAAwG,gBAAgB;AACxH,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;ACxSD;AACiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,IAAI,IAAI,IAAI,EAAE;AACpD,oCAAoC,EAAE,IAAI,IAAI,IAAI,EAAE;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC9C0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAuC;AAC/D;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY,KAAK,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB,yBAAyB;AACzC;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AAAA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f1e2bfee37fc021532f","export const boundNum = (num, min, max) => {\n  if (num > max) {\n    return max;\n  } else if (num < min) {\n    return min;\n  } else {\n    return num;\n  }\n};\n\nexport const baseLog = (x, y) => {\n  return Math.log(y) / Math.log(x);\n};\n\nexport const transitionVar = (variable, start, stop, rate = .01) => {\n  const isGoingUp = (start < stop);\n  const transitionRate = (isGoingUp) ? 1 + rate : 1 - rate;\n  if ((isGoingUp && start > stop * .99) || (!isGoingUp && start < stop * 1.01)) {\n    return variable;\n  } else {\n    return variable * transitionRate;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","import {boundNum} from './util';\n\nclass Amoeba {\n  constructor(ctx, x, y, mass, momentum) {\n    this.ctx = ctx;\n    this.mass = mass || Math.floor((Math.random() * 100000) + 10000);\n    this.radius = Math.sqrt(this.mass / (Math.PI));\n    this.xpos = x || Math.floor(Math.random() * (window.realBoardWidth - this.radius)) + this.radius;\n    this.ypos = y || Math.floor(Math.random() * (window.realBoardHeight - this.radius)) + this.radius;\n    this.momentum = momentum || {x: Math.floor(Math.random() * 1000000) - 500000, y: Math.floor(Math.random() * 1000000) - 500000};\n    this.nextMomentum = Object.assign({}, this.momentum);\n    this.draw = this.draw.bind(this);\n    this.collision = this.collision.bind(this);\n    this.adjustRadius = this.adjustRadius.bind(this);\n    this.colorize = this.colorize.bind(this);\n    this.relativePos = this.relativePos.bind(this);\n    this.color = \"blue\";\n  }\n\n  move() {\n    this.momentum = Object.assign({}, this.nextMomentum);\n    let xDelta = this.momentum['x'] / this.mass;\n    let yDelta = this.momentum['y'] / this.mass;\n    // xDelta = (xDelta > this.momentumMax) ? Math.abs(xDelta) / xDelta * this.momentumMax : xDelta;\n    // yDelta = (yDelta > this.momentumMax) ? Math.abs(yDelta) / yDelta * this.momentumMax : yDelta;\n    this.xpos += xDelta * window.timeCoefficient;\n    this.ypos += yDelta * window.timeCoefficient;\n    // this.xpos += boundNum(xDelta * window.timeCoefficient, -10, 10);\n    // this.ypos += boundNum(yDelta * window.timeCoefficient, -10, 10);\n  }\n\n  adjustRadius() {\n    this.radius = Math.sqrt(this.mass / (Math.PI));\n  }\n\n  aabbCheck(amoeba) {\n    if (amoeba.xpos + amoeba.radius + this.radius > this.xpos\n     && amoeba.xpos < this.xpos + this.radius + amoeba.radius\n     && amoeba.ypos + amoeba.radius + this.radius > this.ypos\n     && amoeba.ypos < this.ypos + this.radius + amoeba.radius) {\n      this.collision(amoeba);\n     }\n}\n\n  collision(amoeba) {\n    let distance = this.radius + amoeba.radius;\n    let currentDistance = Math.sqrt(\n      Math.pow(this.xpos - amoeba.xpos ,2)  + Math.pow(this.ypos - amoeba.ypos ,2)\n    );\n    if (distance > currentDistance){\n\n      this.nextMomentum['x'] += boundNum(amoeba.momentum['x']\n        * amoeba.mass * (currentDistance / distance) * window.timeCoefficient, -50, 50);\n      amoeba.nextMomentum['x'] = amoeba.nextMomentum['x']\n        * boundNum(amoeba.mass / this.mass, .99, 1);\n      this.nextMomentum['y'] += boundNum(amoeba.momentum['y']\n        * amoeba.mass * (currentDistance / distance) * window.timeCoefficient, -50, 50);\n      amoeba.nextMomentum['y'] = amoeba.nextMomentum['y']\n        * boundNum(amoeba.mass / this.mass, .99, 1);\n\n      if (this.mass <= amoeba.mass) {\n        if ((currentDistance - amoeba.radius) / this.radius < 0 || this.mass < 100) {\n          amoeba.mass += this.mass;\n          this.mass = 0;\n          amoeba.nextMomentum['x'] += this.nextMomentum['x'];\n          amoeba.nextMomentum['y'] += this.nextMomentum['y'];\n          return;\n        }\n\n        let bubble = this.massDelta * this.mass\n            * boundNum( (this.radius - (currentDistance - amoeba.radius)) / this.radius, .1, 1)\n            * window.timeCoefficient;\n\n        this.mass -= bubble;\n        amoeba.mass += bubble;\n      }\n    }\n  }\n\n\n\n  wallCollision() {\n    if (this.xpos + this.radius >= window.realBoardWidth) {\n      this.nextMomentum['x'] = -1 * this.momentum['x'];\n      this.xpos = window.realBoardWidth - this.radius - 1;\n    } else if (this.xpos - this.radius <= 0) {\n      this.nextMomentum['x'] = -1 * this.momentum['x'];\n      this.xpos = 0 + this.radius + 1;\n    }\n    if (this.ypos + this.radius >= window.realBoardHeight) {\n      this.nextMomentum['y'] = -1 * this.momentum['y'];\n      this.ypos = window.realBoardHeight - this.radius - 1;\n    } else if (this.ypos - this.radius <= 0) {\n      this.nextMomentum['y'] = -1 * this.momentum['y'];\n      this.ypos = 0 + this.radius + 1;\n    }\n  }\n\n  colorize(relativeX, relativeY, relativeRadius) {\n    if (this.mass <= 0) {\n      return;\n    }\n    let gradient = this.ctx.createRadialGradient(relativeX, relativeY,relativeRadius, relativeX, relativeY, 0);\n    if (this.mass < window.baseMass) {\n      gradient.addColorStop(0, `rgb(${20}, ${20}, ${255})`);\n      gradient.addColorStop(boundNum(1 - (this.mass / window.baseMass),0, 1) , `rgb(${50}, ${20}, ${200})`);\n      gradient.addColorStop(1 , `rgb(${255}, ${20}, ${20})`);\n    } else {\n      gradient.addColorStop(0, `rgb(${255}, ${20}, ${20})`);\n      gradient.addColorStop(boundNum(1 -(window.baseMass / this.mass), 0, 1) , `rgb(${200}, ${20}, ${50})` );\n      gradient.addColorStop(1 , `rgb(${20}, ${20}, ${255})`);\n    }\n    return gradient;\n  }\n\n  relativePos() {\n    let relativeX = (((this.xpos - window.boardFocus['x']) / (window.boardWidth / 2)) * 500) + (window.innerWidth / 2);\n    let relativeY = (((this.ypos - window.boardFocus['y']) / (window.boardHeight/ 2)) * 500) + (window.innerHeight / 2);\n    return {x: relativeX, y: relativeY};\n  }\n\n  draw() {\n    if (this.mass <= 0) {\n      return;\n    }\n    this.adjustRadius();\n\n    let relativeCoors = this.relativePos();\n\n    let relativeRadius = this.radius / window.realBoardWidth * 1000 * window.currentZoom;\n    //radius cannot be kept proportional to window.innerWidth, it will throw of there size on screen\n\n    let gradient = this.colorize(relativeCoors['x'], relativeCoors['y'],relativeRadius);\n\n    this.ctx.beginPath();\n    this.ctx.arc(relativeCoors['x'], relativeCoors['y'], relativeRadius, 0, Math.PI * 2);\n    this.ctx.fillStyle=gradient;\n    this.ctx.fill();\n  }\n}\n\nAmoeba.prototype.momentumDelta = 1;\nAmoeba.prototype.massDelta =  1 / 2;\nAmoeba.prototype.momentumMax = 10;\n\nexport default Amoeba;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/amoeba.js\n// module id = 1\n// module chunks = 0","import Amoeba from './amoeba.js';\nimport Amoeboi from './amoeboi.js';\nimport {boundNum, baseLog, transitionVar} from './util';\nimport {moveAmoebas, makePause, makeGrid, makeClock,\n        makeMargins, makeMassDisplay, makeHomepage} from './game';\n\n\nwindow.iconImages = {};\nwindow.iconImages.githubLogo = new Image();\nwindow.iconImages.githubLogo.src = './assets/images/githubLogo.png';\nwindow.iconImages.linkedInLogo = new Image();\nwindow.iconImages.linkedInLogo.src = './assets/images/linkedInLogo.png';\nwindow.iconImages.folderIcon = new Image();\nwindow.iconImages.folderIcon.src = './assets/images/folderIcon.png';\n\nwindow.homepageClock = null;\n\nwindow.maxZoom = 4;\nwindow.absoluteMaxZoom = 4;\nwindow.minZoom = 0.7;\nwindow.currentZoom = window.maxZoom;\nwindow.realBoardHeight = 20000;\nwindow.realBoardWidth = 20000;\nwindow.boardHeight = window.realBoardHeight / window.currentZoom;\nwindow.boardWidth = window.realBoardWidth / window.currentZoom;\nwindow.boardFocus = {x: window.realBoardWidth / 2, y: window.realBoardHeight / 2};\nwindow.timeBase = 10;\nwindow.timeCoefficient = .2;\nwindow.clockAngle = 0;\nwindow.baseMass = 50000;\nwindow.mouseDownTime = null;\nwindow.mouseDownInterval = null;\nwindow.paused = false;\nwindow.currentStatus = \"reset\";\nwindow.homepageYOffset = 0;\nwindow.homepageTime = null;\nwindow.mousePos= {x: 0, y: 0};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  window.onresize = ()=>{\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  };\n\n  window.addEventListener(\"click\", (e) => {\n    if (window.currentStatus === \"homepage\") {\n      let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n      let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n      let titlePosX = (window.innerWidth / 2) - 195 - mouseOffsetX;\n      let titlePosY = (window.innerHeight / 2) - 80 - mouseOffsetY + window.homepageYOffset;\n      if (e.pageX > titlePosX - 40 && e.pageX < titlePosX + 40\n       && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 250) {\n         window.location = \"https://github.com/1stepremoved\";\n      } else if (e.pageX > titlePosX + 180 && e.pageX < titlePosX + 252\n        && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 242) {\n        window.location = \"https://linkedin.com/in/hamilton-sands\";\n      } else if (e.pageX > titlePosX + 380 && e.pageX < titlePosX + 468\n        && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 258) {\n        window.location = \"https://1stepremoved.github.io/portfolio/\";\n      } else if (e.pageX > titlePosX + 75 && e.pageX < titlePosX + 365\n        && e.pageY > titlePosY + 315 && e.pageY < titlePosY + 360) {\n          window.currentStatus = \"movingToInstructions\";\n          document.body.style.cursor = \"default\";\n      }\n    } else if (window.currentStatus === \"instructions\") {\n      let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n      let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n      let titlePosX = (window.innerWidth / 2) - 195 - mouseOffsetX;\n      let titlePosY = (window.innerHeight / 2) - 80 - mouseOffsetY + window.homepageYOffset;\n      if (e.pageX > titlePosX + 110 && e.pageX < titlePosX + 335\n       && e.pageY > titlePosY + 805 && e.pageY < titlePosY + 850) {\n         window.currentStatus = \"movingToHomePage\";\n         document.body.style.cursor = \"default\";\n      }\n    }\n  });\n\n  window.addEventListener(\"mousedown\", (e) => {\n    if (window.paused || window.currentStatus !== \"playing\") {\n      return;\n    }\n    window.mouseDownTime = Date.now();\n    window.amoeboi.mousePosX = e.pageX;\n    window.amoeboi.mousePosY = e.pageY;\n    window.amoeboi.propel(e,window.amoebas);\n    window.mouseDownInterval = setInterval(() => {\n      window.amoeboi.propel(e,window.amoebas);\n    }, 200);\n  });\n\n  window.addEventListener(\"mousemove\", (e) => {\n    if (window.currentStatus === \"homepage\") {\n      let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n      let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n      let titlePosX = (window.innerWidth / 2) - 195 - mouseOffsetX;\n      let titlePosY = (window.innerHeight / 2) - 80 - mouseOffsetY + window.homepageYOffset;\n      if (e.pageX > titlePosX - 40 && e.pageX < titlePosX + 40\n       && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 250) {\n        document.body.style.cursor = \"pointer\";\n      } else if (e.pageX > titlePosX + 180 && e.pageX < titlePosX + 252\n        && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 242) {\n        document.body.style.cursor = \"pointer\";\n      } else if (e.pageX > titlePosX + 380 && e.pageX < titlePosX + 468\n        && e.pageY > titlePosY + 170 && e.pageY < titlePosY + 258) {\n        document.body.style.cursor = \"pointer\";\n      } else if (e.pageX > titlePosX + 75 && e.pageX < titlePosX + 365\n        && e.pageY > titlePosY + 315 && e.pageY < titlePosY + 360) {\n          document.body.style.cursor = \"pointer\";\n      } else {\n        document.body.style.cursor = \"default\";\n      }\n    } else if (window.currentStatus === \"instructions\") {\n      let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n      let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n      let titlePosX = (window.innerWidth / 2) - 195 - mouseOffsetX;\n      let titlePosY = (window.innerHeight / 2) - 80 - mouseOffsetY + window.homepageYOffset;\n\n      if (e.pageX > titlePosX + 110 && e.pageX < titlePosX + 335\n       && e.pageY > titlePosY + 805 && e.pageY < titlePosY + 850) {\n         document.body.style.cursor = \"pointer\";\n      } else {\n        document.body.style.cursor = \"default\";\n      }\n    }\n\n    window.mousePos = {x: e.pageX, y: e.pageY};\n    if (window.mouseDownTime) {\n      window.amoeboi.mousePosX = e.pageX;\n      window.amoeboi.mousePosY = e.pageY;\n    }\n  });\n\n  window.addEventListener(\"mouseup\", (e) => {\n    window.mouseDownTime = null;\n    clearInterval(window.mouseDownInterval);\n  });\n\n  window.addEventListener(\"keydown\", (e) => {\n    switch (e.keyCode) {\n      case 39:\n        if (window.paused || window.currentStatus !== \"playing\") { return; }\n        window.timeCoefficient = Math.min(window.timeCoefficient * 1.1, window.timeBase);\n        return;\n      case 37:\n        if (window.paused || window.currentStatus !== \"playing\") { return; }\n        window.timeCoefficient = Math.max(window.timeCoefficient * 0.9, Math.pow(window.timeBase, - 1));\n        return;\n      case 32:\n        if (window.currentStatus !== \"playing\") { return; }\n        window.paused = !window.paused;\n        window.mouseDownTime = null;\n        return;\n      case 72:\n        if (window.currentStatus === \"instructions\") {\n          document.body.style.cursor = \"default\";\n          window.currentStatus = \"movingToHomePage\";\n          return;\n        }\n        window.currentStatus = \"reset\";\n        window.paused = false;\n        return;\n      case 13:\n        window.homepageTime = null;\n        if (window.currentStatus !== \"homepage\") { return; }\n        window.currentStatus = \"setup\";\n      default:\n        return;\n    }\n  });\n\n  document.addEventListener(\"mousewheel\", (e)=> {\n    e.preventDefault();\n    if (window.paused  || window.currentStatus !== \"playing\") { return; }\n    let zoomDelta = (e.deltaY / -1000);\n    window.currentZoom = boundNum(window.currentZoom + zoomDelta, window.minZoom, window.maxZoom);\n    window.boardHeight = window.realBoardHeight / window.currentZoom;\n    window.boardWidth = window.realBoardWidth / window.currentZoom;\n  });\n\n  const canvas = document.getElementById(\"background\");\n  const ctx = canvas.getContext(\"2d\");\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  // amoebas.push(new Amoeba(ctx, 4500, 5000, 100000, {x: 100000, y: 0}));\n  // amoebas.push(new Amoeba(ctx, 5500, 5000, 300000, {x: -100000, y: 0}));\n  // amoebas.push(new Amoeba(ctx, 5300, 5000, 100000, {x: -100000, y: 0}));\n  let animate = () => {\n    ctx.clearRect(0,0, innerWidth, innerHeight);\n    makeGrid(ctx);\n\n    if (window.currentStatus === \"reset\") {\n      window.maxZoom = 4;\n      window.currentZoom = 2;\n      window.timeCoefficient = 0.2;\n      window.boardHeight = window.realBoardHeight / window.currentZoom;\n      window.boardWidth = window.realBoardWidth / window.currentZoom;\n      window.baseMass = 50000;\n      window.amoeboi = null;\n      window.amoebas = [];\n      for (let i = 0; i < 400; i++) {\n        window.amoebas.push(new Amoeba(ctx));\n      }\n      window.boardFocus = {x: window.realBoardWidth / 2, y: window.realBoardHeight / 2};\n      window.currentStatus = \"homepage\";\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.currentStatus === \"setup\") {\n      window.amoebas = [];\n      window.amoeboi = new Amoeboi(ctx, window.realBoardWidth / 2, window.realBoardHeight / 2, 100000, {x: 100000, y: 0});\n      for (let i = 0; i < 400; i++) {\n        window.amoebas.push(new Amoeba(ctx));\n      }\n      window.currentZoom = 4;\n      window.boardHeight = window.realBoardHeight / window.currentZoom;\n      window.boardWidth = window.realBoardWidth / window.currentZoom;\n      window.baseMass = window.amoeboi.mass;\n      window.boardFocus = {x: window.amoeboi.xpos, y: window.amoeboi.ypos};\n      window.currentStatus = \"playing\";\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.currentStatus === \"homepage\") {\n      moveAmoebas(ctx);\n      makeHomepage(ctx);\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.currentStatus === \"movingToInstructions\") {\n      if (window.homepageYOffset > -1000) {\n        window.homepageYOffset -= 20;\n      } else {\n        window.currentStatus = \"instructions\";\n      }\n      moveAmoebas(ctx);\n      makeHomepage(ctx);\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.currentStatus === \"instructions\") {\n      moveAmoebas(ctx);\n      makeHomepage(ctx);\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.currentStatus === \"movingToHomePage\") {\n      if (window.homepageYOffset < 0) {\n        window.homepageYOffset += 20;\n      } else {\n        window.currentStatus = \"homepage\";\n      }\n      moveAmoebas(ctx);\n      makeHomepage(ctx);\n      return requestAnimationFrame(animate);\n    }\n\n    if (window.paused) {\n      window.amoebas.forEach(amoeba => {\n        amoeba.draw();\n      });\n      window.amoeboi.draw();\n\n      makePause(ctx);\n      // makeMargins(ctx);\n      return requestAnimationFrame(animate);\n    }\n\n    moveAmoebas(ctx);\n\n    makeMargins(ctx);\n    makeMassDisplay(ctx);\n    // makeClock(ctx);\n    if (window.amoeboi.mass > 0) {\n      window.boardFocus = {x: window.amoeboi.xpos, y: window.amoeboi.ypos};\n      window.baseMass = window.amoeboi.mass;\n      if (window.amoeboi.radius / window.realBoardWidth * 1000 * window.currentZoom > 75) {\n        window.maxZoom = boundNum(75 / (window.amoeboi.radius / window.realBoardWidth * 1000), 1, window.absoluteMaxZoom);\n        window.currentZoom = boundNum(window.currentZoom * 0.999, window.minZoom, window.maxZoom);\n        window.boardHeight = window.realBoardHeight / window.currentZoom;\n        window.boardWidth = window.realBoardWidth / window.currentZoom;\n      }\n      if (window.amoeboi.radius / window.realBoardWidth * 1000 * window.maxZoom < 75) {\n        window.maxZoom = boundNum(75 / (window.amoeboi.radius / window.realBoardWidth * 1000), 1, window.absoluteMaxZoom);\n      }\n    } else {\n      window.boardFocus['x'] += (window.boardFocus['x'] < window.realBoardWidth / 2) ? 10 : -10;\n      window.boardFocus['y'] += (window.boardFocus['y'] < window.realBoardHeight / 2) ? 10 : -10;\n      window.currentZoom = window.currentZoom > 1 ? window.currentZoom * 0.9 : window.currentZoom;\n      window.boardHeight = window.realBoardHeight / window.currentZoom;\n      window.boardWidth = window.realBoardWidth / window.currentZoom;\n      window.baseMass = 0;\n    }\n    requestAnimationFrame(animate);\n  };\n  requestAnimationFrame(animate);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 2\n// module chunks = 0","import Amoeba from './amoeba';\nimport {boundNum} from './util';\n\nclass Amoeboi extends Amoeba {\n  constructor(ctx, x, y, mass, momentum) {\n    super(ctx, x, y, mass, momentum);\n    this.mousePosX = null;\n    this.mousePosY = null;\n  }\n\n  colorize(relativeX, relativeY, relativeRadius) {\n    if (this.mass <= 0) {\n      return;\n    }\n    let gradient = this.ctx.createRadialGradient(relativeX, relativeY,relativeRadius, relativeX, relativeY, 0);\n    gradient.addColorStop(0, `rgb(${0}, ${255}, ${0})`);\n    gradient.addColorStop(1, `rgb(${0}, ${150}, ${0})`);\n    return gradient;\n  }\n\n  propel(e, amoebas) {\n    if (this.mass <= 0) {\n      return;\n    }\n    let diffX = this.mousePosX - (window.innerWidth / 2);\n    let diffY = this.mousePosY - (window.innerHeight / 2);\n    let angle = Math.atan2(diffY, diffX);\n    let dirX = Math.cos(angle);\n    let dirY = Math.sin(angle);\n\n    let mass = this.mass * boundNum(((Date.now() - window.mouseDownTime) / 30000), .01, .1);\n    this.mass -= mass;\n    let radius = Math.sqrt(mass / (Math.PI));\n    let xpos = this.xpos + (dirX * this.radius) + ((dirX > 0 ) ? radius : -1 * radius);\n    let ypos = this.ypos + (dirY * this.radius) + ((dirY > 0 ) ? radius : -1 * radius);\n    let momentum = {x: mass * 50 * dirX * 2, y: mass * 50 * dirY * 2};\n    amoebas.push(new Amoeba(this.ctx, xpos, ypos, mass, momentum));\n    this.nextMomentum['x'] += momentum['x'] * -1 * 3;\n    this.nextMomentum['y'] += momentum['y'] * -1 * 3;\n    // debugger\n    let distance = Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2) );\n    // debugger\n  }\n\n}\n\nexport default Amoeboi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/amoeboi.js\n// module id = 3\n// module chunks = 0","import {boundNum, baseLog} from './util';\n\nexport const makePause = (ctx) => {\n  ctx.globalAlpha = 0.7;\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n  let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n  let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n\n  let homepageWave = Math.sin(((Date.now() - window.homepageTime) % 1500) / 1500 * Math.PI);\n\n  ctx.globalAlpha = 1;\n  ctx.fillStyle = 'white';\n  ctx.font = '70px Impact';\n  let titlePosX = (window.innerWidth / 2) - 75 - mouseOffsetX;\n  let titlePosY = (window.innerHeight / 2) + 50 - mouseOffsetY + window.homepageYOffset;\n  ctx.fillText(`PAUSED`, titlePosX, titlePosY);\n};\n\nexport const makeClock = (ctx) => {\n  ctx.globalAlpha = 0.5;\n\n  ctx.beginPath();\n  ctx.arc(120, 120, 65, 0, ((baseLog(window.timeBase, window.timeCoefficient) + 1) / 2 * Math.PI * 2));\n  ctx.strokeStyle = 'orange';\n  ctx.lineWidth = 5;\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.arc(120, 120, 60, 0, Math.PI * 2);\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 3;\n  ctx.stroke();\n  ctx.globalAlpha = 0.8;\n  ctx.fillStyle = 'white';\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.moveTo(120,120);\n  ctx.lineTo(120 + (60*Math.cos(window.clockAngle * Math.PI / 180)), 120 + (60*Math.sin(window.clockAngle * Math.PI / 180)));\n  ctx.fillStyle = 'black';\n  ctx.stroke();\n  window.clockAngle = (window.clockAngle + (window.timeCoefficient)) % 360;\n  ctx.globalAlpha = 1;\n};\n\nexport const makeGrid = (ctx) => {\n  // let currentLineX = window.boardFocus['x'] - (window.boardWidth / 2);\n  ctx.globalAlpha = 0.4;\n\n  let interval = 500;\n  let realX = 0;\n  let topBorderY =  (((0 - window.boardFocus['y']) / (window.boardHeight / 2)) * 500) + (window.innerHeight / 2);\n  let bottomBorderY =  (((window.realBoardHeight - window.boardFocus['y']) / (window.boardHeight / 2)) * 500) + (window.innerHeight / 2);\n  while (realX <= window.realBoardWidth) {\n    ctx.fillStyle = (realX ===window.realBoardWidth || realX === 0) ? \"red\" :\"black\";\n    let lineX = (((realX - window.boardFocus['x']) / (window.boardWidth / 2)) * 500) + (window.innerWidth / 2);\n    ctx.fillRect(lineX,topBorderY, 2, bottomBorderY - topBorderY);\n    realX += interval;\n  }\n\n  let realY = 0;\n  let leftBorderX = (((0 - window.boardFocus['x']) / (window.boardWidth / 2)) * 500) + (window.innerWidth / 2);\n  let rightBorderX = (((window.realBoardWidth - window.boardFocus['x']) / (window.boardWidth / 2)) * 500) + (window.innerWidth / 2);\n  while (realY <= window.realBoardHeight) {\n    ctx.fillStyle = (realY ===window.realBoardHeight || realY === 0) ? \"red\" :\"black\";\n    let lineY = (((realY - window.boardFocus['y']) / (window.boardHeight / 2)) * 500) + (window.innerHeight / 2);\n    ctx.fillRect(leftBorderX,lineY, rightBorderX - leftBorderX, 2);\n    realY += interval;\n  }\n\n  ctx.globalAlpha = 1;\n};\n\nexport const makeMassDisplay = (ctx) => {\n  ctx.globalAlpha = 0.7;\n  ctx.fillStyle = 'black';\n  let displayWidth;\n  if (window.amoeboi.mass > 0) {\n    displayWidth = 130 + (15 * boundNum(Math.floor(Math.log10(window.amoeboi.mass / 100),1, 10000)));\n  } else {\n    displayWidth = 145;\n  }\n  ctx.fillRect(window.innerWidth - 300, 65, displayWidth, 50);\n  ctx.globalAlpha = 1;\n  ctx.fillStyle = 'white';\n  ctx.font = '30px Impact';\n  ctx.fillText(`Mass: ${Math.floor(window.amoeboi.mass / 100) }`, window.innerWidth - 280, 100);\n};\n\nexport const makeMargins = (ctx) => {\n  ctx.globalAlpha = 0.7;\n  ctx.fillStyle = \"black\";\n  let marginHeight = Math.floor(window.innerHeight / 8);\n  let marginWidth = Math.floor(window.innerWidth / 8);\n  // ctx.fillRect(0,0, window.innerWidth, marginHeight);\n  // ctx.fillRect(0,  window.innerHeight - marginHeight, window.innerWidth, window.innerHeight);\n  // ctx.fillRect(0, marginHeight, marginWidth, window.innerHeight - (marginHeight * 2));\n  // ctx.fillRect(window.innerWidth - marginWidth, marginHeight, window.innerWidth, window.innerHeight - (marginHeight * 2));\n\n\n  let timebarWidth = 500;\n  let timebarHeight = 50;\n  let timebarX = (window.innerWidth / 2) - (timebarWidth / 2);\n  let timebarY = window.innerHeight - (marginHeight / 2) - (timebarHeight / 2);\n  let time0to1 = (baseLog(window.timeBase, window.timeCoefficient) + 1) / 2;\n\n  // let gradient = ctx.createLinearGradient(timebarX, timebarY, timebarX + timebarWidth, timebarY + timebarHeight);\n  // gradient.addColorStop(0, \"rgb(0,0,0)\");\n  // gradient.addColorStop(time0to1, \"rgb(255,255,255)\");\n  // gradient.addColorStop(time0to1, \"rgb(255,255,255)\");\n  // gradient.addColorStop(1, \"rgb(0,0,0)\");\n  // let color = (baseLog(window.timeBase, window.timeCoefficient) + 1) / 2 * 255;\n  // debugger\n  // ctx.fillStyle = gradient;\n  // ctx.fillStyle = `rgb(${255 - color},0,${color})`;\n  ctx.fillStyle = `black`;\n  ctx.fillRect(timebarX - 10, timebarY, timebarWidth + 20, timebarHeight);\n  ctx.fillStyle = `white`;\n  ctx.fillRect(timebarX + (timebarWidth * time0to1) - 10, timebarY, 20, timebarHeight);\n  ctx.globalAlpha = 1;\n};\n\nexport const moveAmoebas = (ctx) => {\n  window.amoebas = window.amoebas.filter(amoeba => {\n    return amoeba.radius > 0;\n  });\n  window.amoebas.forEach(amoeba => {\n    window.amoeboi ? window.amoeboi.aabbCheck(amoeba) : null;\n    window.amoeboi ? amoeba.aabbCheck(window.amoeboi) : null;\n    window.amoebas.forEach(amoeba2 =>{\n      if (amoeba2 !== amoeba){\n        amoeba.aabbCheck(amoeba2);\n      }\n    });\n    amoeba.wallCollision();\n  });\n  window.amoeboi ? window.amoeboi.wallCollision() : null;\n  ctx.globalAlpha = 0.8;\n  window.amoebas.forEach(amoeba => {\n    amoeba.move();\n    amoeba.draw();\n  });\n  window.amoeboi ? window.amoeboi.move() : null;\n  window.amoeboi ? window.amoeboi.draw() : null;\n  ctx.globalAlpha = 1;\n};\n\nexport const makeHomepage = (ctx) => {\n  ctx.globalAlpha = 0.7;\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n  let mouseOffsetX = window.mousePos['x'] / window.innerWidth * 50;\n  let mouseOffsetY = window.mousePos['y'] / window.innerHeight * 50;\n\n  let homepageWave = Math.sin(((Date.now() - window.homepageTime) % 1500) / 1500 * Math.PI);\n\n  ctx.globalAlpha = 1;\n  ctx.fillStyle = 'white';\n  ctx.font = '120px Impact';\n  let titlePosX = (window.innerWidth / 2) - 195 - mouseOffsetX;\n  let titlePosY = (window.innerHeight / 2) - 80 - mouseOffsetY + window.homepageYOffset;\n  ctx.fillText(`AmoeBoi`, titlePosX, titlePosY);\n\n  ctx.globalAlpha = 0.7;\n  ctx.fillStyle = \"rgb(0,0,50)\";\n  ctx.fillRect(titlePosX - 300, titlePosY + 885, 1050, 530);\n  ctx.globalAlpha = 1;\n\n\n  ctx.fillStyle = \"rgb(240,240,240)\";\n  ctx.font = `${30 + (2 * homepageWave) }px Impact`;\n  ctx.fillText(`PRESS ENTER TO START`, titlePosX + 85 - (5 * homepageWave), titlePosY + 100 + (2*homepageWave));\n\n  ctx.font = '50px Impact';\n  ctx.fillText(`INSTRUCTIONS`, titlePosX + 75, titlePosY + 360);\n\n  ctx.fillText(`MAIN MENU`, titlePosX + 110, titlePosY + 850);\n\n  ctx.font = '25px Arial Black';\n  ctx.fillText(\"Become the Biggest!\", titlePosX + 80, titlePosY + 930);\n\n  ctx.fillText(\"Absorb smaller amoebas, avoid the bigger ones,\", titlePosX - 100, titlePosY + 1000);\n  ctx.fillText(\"and become the biggest blob in the land.\", titlePosX - 50, titlePosY + 1030);\n\n  ctx.fillText(\"Aim and hold the left mouse button to shoot out smaller amoebas\", titlePosX - 230, titlePosY + 1100);\n  ctx.fillText(\"and propel yourself the other way... but be careful!\", titlePosX - 120, titlePosY + 1130);\n  ctx.fillText(\"Every shot uses a little bit of your own mass.\", titlePosX - 80, titlePosY + 1160);\n\n  ctx.fillText(\"You can speed up or slow down time using the left/right arrow keys.\", titlePosX - 250, titlePosY + 1230);\n\n  ctx.fillText(\"Press space to pause the game\", titlePosX + 5, titlePosY + 1300);\n  ctx.fillText(\"and press H to return to the Main Menu at any time.\", titlePosX - 130, titlePosY + 1330);\n\n  ctx.fillText(\"Have fun!\", titlePosX + 150, titlePosY + 1400);\n\n  ctx.drawImage(window.iconImages.githubLogo, titlePosX - 50, titlePosY + 170, 80, 80);\n  ctx.drawImage(window.iconImages.linkedInLogo, titlePosX + 180, titlePosY + 170, 72, 72);\n  ctx.drawImage(window.iconImages.folderIcon, titlePosX + 380, titlePosY + 170, 88, 88);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}